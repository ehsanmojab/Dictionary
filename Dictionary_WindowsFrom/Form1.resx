<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>